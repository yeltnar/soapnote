{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["action_table","g","f","text","getMainTextAreaEle","value","changePage","name","s","getUrlValueOnLoad","url_value","undefined","console","log","window","location","href","split","setTitle","decodeURIComponent","App","useState","show_alt_menu","setShowAltMenu","main_text","setMainText","url_is_too_long","setUrlIsTooLong","useEffect","last_key","keyupFunct","e","key","focusMainTextArea","setTimeout","addEventListener","removeEventListener","alt_menu","AltMenu","main_text_area_class","push","onChange","target","addEncodedText","className","join","style","parentStyle","position","left","top","width","zIndex","Number","MAX_SAFE_INTEGER","height","childStyle","backgroundColor","color","textAlign","fontSize","keyup","k","stopPropagation","content","arr","i","focus","document","querySelector","url","title","new_title","exec","timeout_id","raw_text","url_was_too_long","clearTimeout","new_value","encodeURIComponent","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ddd0cb03.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\n\nconst WARN_URL_LENGTH = 2000;\nconst URL_UPDATE_DELAY = 1000;\n\nfunction encode(s) {\n  s = encodeURIComponent(s);\n  return s;\n}\nfunction decode(s) {\n  s = (decodeURIComponent(s));\n  return s;\n}\n\nconst action_table = {\n  g:{\n    f:moveToGoogle,\n    name:\"moveToGoogle\"\n  },\n  s:{\n    f:moveToStartpage,\n    name:\"moveToStartpage\"\n  },\n};\n\nconst getUrlValueOnLoad = (()=>{ // cache the url value on load for future calls \n  let url_value;\n  return function getUrlValueOnLoad(){\n    if(url_value===undefined){\n      url_value = getUrlValue();\n      setTitle(url_value);\n    }\n    return url_value;\n  }\n})();\n\nfunction getUrlValue(){\n  console.log(\"window.location get\");\n  return decode(window.location.href.split(\"#\")[1]||\"\");\n}\n\nfunction App() {\n\n  const [show_alt_menu,setShowAltMenu] = useState(false);\n  const [main_text,setMainText] = useState(getUrlValueOnLoad());\n  const [url_is_too_long, setUrlIsTooLong] = useState(false);\n\n  // for hot keys\n  useEffect(()=>{ \n    let last_key = undefined;\n    console.log(\"window.addEventListener\")\n    window.addEventListener('keyup',keyupFunct);\n    function keyupFunct(e){\n      if( e.key===\"Control\" && last_key===\"Control\" ){\n        console.log(`should open extra menu ${!show_alt_menu}`);\n        setShowAltMenu(!show_alt_menu);\n        focusMainTextArea();\n      }\n      last_key = e.key;\n      setTimeout(()=>{\n        last_key=undefined;\n      },500);\n    }\n    return ()=>{\n      console.log(\"window.removeEventListener\")\nwindow.removeEventListener('keyup',keyupFunct);\n    };\n  },[show_alt_menu])\n\n  const alt_menu = (()=>{\n    if(show_alt_menu){\n      return (<AltMenu></AltMenu>);\n    }else{\n      return null;\n    }\n  })();\n\n  function mainTextChange(e){\n    // debugger\n    if(show_alt_menu){return;}\n    setMainText(e.target.value);\n    addEncodedText(e.target.value, url_is_too_long, setUrlIsTooLong)\n  }\n\n  const main_text_area_class = [\"maintextarea\"];\n  if(url_is_too_long){main_text_area_class.push(\"warn\");}\n\n  return (\n    <>\n      {alt_menu}\n      <textarea value={main_text} onChange={mainTextChange} className={main_text_area_class.join(\" \")}></textarea>\n    </>\n  );\n}\n\nexport default App;\n\nfunction AltMenu(){\n\n  const style = {\n    backgroundColor:\"yellow\",\n    color:\"black\",\n  }\n\n  const parentStyle = {\n    position:\"absolute\",\n    left: \"0px\",\n    top: \"0px\",\n    width: \"100%\",\n    zIndex: Number.MAX_SAFE_INTEGER,\n    height: \"10px\",\n  };\n  const childStyle = {\n    width: \"100%\",\n    backgroundColor: style.backgroundColor,\n    position: \"fixed\",\n    left: \"0px\",\n    top: \"0px\",\n    color: style.color,\n    textAlign: \"center\",\n    fontSize: \"2rem\",\n  };\n\n  useEffect(()=>{\n    console.log(\"window.addEventListener\")\nwindow.addEventListener('keyup',keyup);\n    function keyup(e){\n      // debugger\n      console.log(e.key);\n      for(let k in action_table){\n        if( k===e.key ){\n          action_table[k].f();\n        }\n      }\n      e.stopPropagation();\n    }\n    focusMainTextArea()\n    return ()=>{console.log(\"window.removeEventListener\")\nwindow.removeEventListener('keyup',keyup)}\n  },[]);\n\n  const content = (()=>{\n    const arr = [];\n    let i=0;\n    for(let k in action_table){\n      arr.push(<div key={i++}>{k} {action_table[k].name}</div>);\n    }\n    return arr;\n  })();\n\n  return (\n    <div style={parentStyle}>\n      <div style={childStyle}>\n        {content}\n      </div>\n    </div>\n  )\n}\n\nfunction focusMainTextArea(){\n  console.log(\"window.focus\")\nwindow.focus(getMainTextAreaEle());\n}\n\nfunction getMainTextAreaEle(){\n  return document.querySelector(\".maintextarea\");\n}\n\nfunction moveToGoogle(){\n  const text = getMainTextAreaEle().value;\n  changePage(`https://google.com/search?q=${text}`);\n}\n\nfunction moveToStartpage(){\n  const text = getMainTextAreaEle().value;\n  changePage(`https://www.startpage.com/do/dsearch?query=${text}`);\n}\n\nfunction changePage(url){\n  console.log(\"set window.location\")\n  window.location.href = url;\n}\n\nfunction setTitle(title){\n\n  if(title===null||title===undefined||title===\"\"){\n    return \"SoapNote\";\n  }\n\n  // take up to first new line as title and remove whitespace at front and end\n  const new_title = /([^\\s].*[^\\s])\\n?/.exec(title)[1];\n  if(document.title!==new_title){\n    document.title = new_title; \n  }\n}\n\nconst addEncodedText = (()=>{\n  let timeout_id;\n\n  return function addEncodedText(raw_text, url_was_too_long, setUrlIsTooLong){\n    clearTimeout(timeout_id);\n    timeout_id = setTimeout(()=>{\n      \n      const new_value = `${window.location.href.split(\"#\")[0]}#${encode(raw_text)}`;\n\n      const url_is_too_long = new_value.length>WARN_URL_LENGTH;\n\n      if( url_is_too_long!==url_was_too_long ){ \n        setUrlIsTooLong(url_is_too_long) \n      }\n      \n      changePage(new_value); // this takes a while... only do it after stop updating for a sec \n      setTitle(raw_text)\n      console.log(\"window.location set\");\n\n    },URL_UPDATE_DELAY);\n  }\n})();","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}