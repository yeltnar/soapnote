{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["action_table","g","f","text","getMainTextAreaEle","value","url","window","location","href","name","s","alert","getUrlValueOnLoad","url_value","undefined","split","decodeURIComponent","getUrlValue","App","useState","show_alt_menu","setShowAltMenu","main_text","setMainText","main_text_style","backgroundColor","color","length","useEffect","last_key","keyupFunct","e","key","console","log","focusMainTextArea","setTimeout","addEventListener","removeEventListener","alt_menu","AltMenu","onChange","target","addEncodedText","style","className","parentStyle","position","left","top","width","zIndex","Number","MAX_SAFE_INTEGER","height","childStyle","textAlign","fontSize","keyup","k","stopPropagation","content","arr","i","push","focus","document","querySelector","timeout_id","raw_text","clearTimeout","new_value","encodeURIComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"sLAAe,I,YCaf,IAAMA,EAAe,CACnBC,EAAE,CACAC,EAsJJ,WAEE,IAAMC,EAAOC,IAAqBC,MAQhBC,EAPP,+BAAD,OAAgCH,GAQ1CI,OAAOC,SAASC,KAAOH,EADzB,IAAoBA,GA/JhBI,KAAK,gBAEPC,EAAE,CACAT,EAwJJ,WACEU,MAAM,OAxJJF,KAAK,oBAIHG,EAAqB,WACzB,IAAIC,EACJ,OAAO,WAIL,YAHeC,IAAZD,IACDA,EAMN,WACE,OA3BcH,EA2BAJ,OAAOC,SAASC,KAAKO,MAAM,KAAK,IAAI,GA1B7CC,mBAAmBN,GAD1B,IAAgBA,EAoBEO,IAEPJ,GANgB,GAuEZK,MAzDf,WAAgB,IAAD,EAE0BC,oBAAS,GAFnC,mBAENC,EAFM,KAEQC,EAFR,OAGmBF,mBAASP,KAH5B,mBAGNU,EAHM,KAGIC,EAHJ,KAKPC,EAGG,CACLC,gBAAgB,QAChBC,MAHYJ,EAAUK,OADF,IAC2B,UAAY,SAQ/DC,qBAAU,WACR,IAAIC,OAAWf,EAEf,SAASgB,EAAWC,GACN,YAARA,EAAEC,KAA8B,YAAXH,IACvBI,QAAQC,IAAR,kCAAuCd,IACvCC,GAAgBD,GAChBe,KAEFN,EAAWE,EAAEC,IACbI,YAAW,WACTP,OAASf,IACT,KAEJ,OAZAR,OAAO+B,iBAAiB,QAAQP,GAYzB,WACLxB,OAAOgC,oBAAoB,QAAQR,OAIvC,IAAMS,EACDnB,EACO,cAACoB,EAAD,IAED,KAWX,OACE,qCACGD,EACD,0BAAUnC,MAAOkB,EAAWmB,SAVhC,SAAwBV,GAEnBX,IACHG,EAAYQ,EAAEW,OAAOtC,OACrBuC,EAAeZ,EAAEW,OAAOtC,SAMgCwC,MAAOpB,EAAiBqB,UAAU,qBAO9F,SAASL,IAEP,IAAMI,EACY,SADZA,EAEE,QAGFE,EAAc,CAClBC,SAAS,WACTC,KAAM,MACNC,IAAK,MACLC,MAAO,OACPC,OAAQC,OAAOC,iBACfC,OAAQ,QAEJC,EAAa,CACjBL,MAAO,OACPzB,gBAAiBmB,EACjBG,SAAU,QACVC,KAAM,MACNC,IAAK,MACLvB,MAAOkB,EACPY,UAAW,SACXC,SAAU,QAGZ7B,qBAAU,WAER,SAAS8B,EAAM3B,GAGb,IAAI,IAAI4B,KADR1B,QAAQC,IAAIH,EAAEC,KACDjC,EACP4D,IAAI5B,EAAEC,KACRjC,EAAa4D,GAAG1D,IAGpB8B,EAAE6B,kBAGJ,OAZAtD,OAAO+B,iBAAiB,QAAQqB,GAWhCvB,IACO,WAAK7B,OAAOgC,oBAAoB,QAAQoB,OAGjD,IAAMG,EAAW,WACf,IAAMC,EAAM,GACRC,EAAE,EACN,IAAI,IAAIJ,KAAK5D,EACX+D,EAAIE,KAAK,gCAAgBL,EAAhB,IAAoB5D,EAAa4D,GAAGlD,OAA1BsD,MAErB,OAAOD,EANQ,GASjB,OACE,qBAAKlB,MAAOE,EAAZ,SACE,qBAAKF,MAAOW,EAAZ,SACGM,MAMT,SAAS1B,IACP7B,OAAO2D,MAAM9D,KAGf,SAASA,IACP,OAAO+D,SAASC,cAAc,iBAiBhC,IAAMxB,EAAkB,WACtB,IAAIyB,EACJ,OAAO,SAAwBC,GAC7BC,aAAaF,GACbA,EAAahC,YAAW,WACtB,IApLU1B,EAoLJ6D,EAAS,UAAMjE,OAAOC,SAASC,KAAKO,MAAM,KAAK,GAAtC,aApLLL,EAoLwD2D,EAnLlEG,mBAAmB9D,KAoLnBJ,OAAOC,SAASC,KAAO+D,IACvB,MAPkB,GCvKTE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASmB,eAAe,SAM1BZ,K","file":"static/js/main.6f5a5e4a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\n\nfunction encode(s) {\n  s = encodeURIComponent(s);\n  return s;\n}\nfunction decode(s) {\n  s = (decodeURIComponent(s));\n  return s;\n}\n\nconst action_table = {\n  g:{\n    f:moveToGoogle,\n    name:\"moveToGoogle\"\n  },\n  s:{\n    f:moveToStartpage,\n    name:\"moveToStartpage\"\n  },\n};\n\nconst getUrlValueOnLoad = (()=>{ // cache the url value on load for future calls \n  let url_value;\n  return function getUrlValueOnLoad(){\n    if(url_value===undefined){\n      url_value = getUrlValue();\n    }\n    return url_value;\n  }\n})();\n\nfunction getUrlValue(){\n  return decode(window.location.href.split(\"#\")[1]||\"\");\n}\n\nfunction App() {\n\n  const [show_alt_menu,setShowAltMenu] = useState(false);\n  const [main_text,setMainText] = useState(getUrlValueOnLoad());\n\n  const main_text_style = (()=>{\n    const invert_length = 600;\n    const color = main_text.length > invert_length ? \"#ffc6c0\" : \"white\";\n    return {\n      backgroundColor:\"black\",\n      color\n    };\n  })();\n\n  // for hot keys\n  useEffect(()=>{ \n    let last_key = undefined;\n    window.addEventListener('keyup',keyupFunct);\n    function keyupFunct(e){\n      if( e.key===\"Control\" && last_key===\"Control\" ){\n        console.log(`should open extra menu ${!show_alt_menu}`);\n        setShowAltMenu(!show_alt_menu);\n        focusMainTextArea();\n      }\n      last_key = e.key;\n      setTimeout(()=>{\n        last_key=undefined;\n      },500);\n    }\n    return ()=>{\n      window.removeEventListener('keyup',keyupFunct);\n    };\n  })\n\n  const alt_menu = (()=>{\n    if(show_alt_menu){\n      return (<AltMenu></AltMenu>);\n    }else{\n      return null;\n    }\n  })();\n\n  function mainTextChange(e){\n    // debugger\n    if(show_alt_menu){return;}\n    setMainText(e.target.value);\n    addEncodedText(e.target.value);\n  }\n\n  return (\n    <>\n      {alt_menu}\n      <textarea value={main_text} onChange={mainTextChange} style={main_text_style} className=\"maintextarea\"></textarea>\n    </>\n  );\n}\n\nexport default App;\n\nfunction AltMenu(){\n\n  const style = {\n    backgroundColor:\"yellow\",\n    color:\"black\",\n  }\n\n  const parentStyle = {\n    position:\"absolute\",\n    left: \"0px\",\n    top: \"0px\",\n    width: \"100%\",\n    zIndex: Number.MAX_SAFE_INTEGER,\n    height: \"10px\",\n  };\n  const childStyle = {\n    width: \"100%\",\n    backgroundColor: style.backgroundColor,\n    position: \"fixed\",\n    left: \"0px\",\n    top: \"0px\",\n    color: style.color,\n    textAlign: \"center\",\n    fontSize: \"2rem\",\n  };\n\n  useEffect(()=>{\n    window.addEventListener('keyup',keyup);\n    function keyup(e){\n      // debugger\n      console.log(e.key);\n      for(let k in action_table){\n        if( k===e.key ){\n          action_table[k].f();\n        }\n      }\n      e.stopPropagation();\n    }\n    focusMainTextArea()\n    return ()=>{window.removeEventListener('keyup',keyup)}\n  });\n\n  const content = (()=>{\n    const arr = [];\n    let i=0;\n    for(let k in action_table){\n      arr.push(<div key={i++}>{k} {action_table[k].name}</div>);\n    }\n    return arr;\n  })();\n\n  return (\n    <div style={parentStyle}>\n      <div style={childStyle}>\n        {content}\n      </div>\n    </div>\n  )\n}\n\nfunction focusMainTextArea(){\n  window.focus(getMainTextAreaEle());\n}\n\nfunction getMainTextAreaEle(){\n  return document.querySelector(\".maintextarea\");\n}\n\nfunction moveToGoogle(){\n  // alert('google');\n  const text = getMainTextAreaEle().value;\n  changePage(`https://google.com/search?q=${text}`);\n}\n\nfunction moveToStartpage(){\n  alert('sp');  \n}\n\nfunction changePage(url){\n  window.location.href = url;\n}\n\nconst addEncodedText = (()=>{\n  let timeout_id;\n  return function addEncodedText(raw_text){\n    clearTimeout(timeout_id);\n    timeout_id = setTimeout(()=>{\n      const new_value = `${window.location.href.split(\"#\")[0]}#${encode(raw_text)}`;\n      window.location.href = new_value;  // this takes a while... only do it after stop updating for a sec \n    },500);\n  }\n})();\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}